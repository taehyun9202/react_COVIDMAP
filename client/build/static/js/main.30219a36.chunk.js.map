{"version":3,"sources":["components/Main.jsx","components/Stateinfo.jsx","App.js","serviceWorker.js","index.js"],"names":["Main","states","state","useState","positive","setPositive","negative","setNegative","death","setDeath","todaypositive","setTodaypositive","test","setTest","todaytest","setTodaytest","todaydeath","setTodaydeath","todayhospitalize","setTodayhospitalize","recovered","setRecovered","todayupdate","setTodayupdate","usHistory","setUSHistory","current","setCurrent","useEffect","axios","get","then","res","data","totalTestResults","totalTestResultsIncrease","positiveIncrease","deathIncrease","hospitalizedIncrease","lastModified","catch","err","console","log","weeklyChart","chartData","labels","date","datasets","label","fill","borderColor","hidden","getfirstdayofMonth","array","output","i","length","toString","endsWith","push","monthlyChart","negposChart","backgroundColor","deathChart","className","style","fontSize","marginTop","height","options","title","display","text","legend","position","onClick","e","stopPropagation","toFixed","id","name","onChange","navigate","selectSt","target","value","type","disabled","selected","map","a","abbreviation","customize","number","obj","statesCustomConfig","dataset","width","defaultFill","class","overflow","marginBottom","s","totalTestsPeopleViral","href","Stateinfo","props","setState","testingCenter","setTestingCenter","lastUpdateEt","st","allstate","location","fullStateName","padding","physical_address","fontWeight","address_1","city","state_province","postal_code","phones","regular_schedule","opens_at","closes_at","App","path","param","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.30219a36.chunk.js","sourcesContent":["import React, { useState, useEffect, Component } from 'react';\r\nimport { Link, navigate } from '@reach/router';\r\nimport axios from 'axios';\r\nimport USAMap from \"react-usa-map\";\r\nimport state from '../data.json'\r\nimport { Doughnut, Bar , Line, Pie } from 'react-chartjs-2';\r\nimport './Main.css'\r\n\r\nconst Main = () => {\r\n  const states = state\r\n  const [positive, setPositive] = useState(0)\r\n  const [negative, setNegative] = useState(0)\r\n  const [death, setDeath] = useState(0)\r\n  const [todaypositive, setTodaypositive] = useState(0)\r\n  const [test, setTest] = useState(0)\r\n  const [todaytest, setTodaytest] = useState(0)\r\n  const [todaydeath, setTodaydeath] = useState(0)\r\n  const [todayhospitalize, setTodayhospitalize] = useState(0)\r\n  const [recovered, setRecovered] = useState(0)\r\n  const [todayupdate, setTodayupdate] = useState(\"\")\r\n  const [usHistory, setUSHistory] = useState([]);\r\n\r\n  //fetch all data from march to today\r\n  const fetchAllState = () => {\r\n    axios.get(\"https://api.covidtracking.com/v1/us/daily.json\")\r\n    .then(res => {\r\n      setUSHistory(res.data)\r\n      setTest(res.data[0].totalTestResults)\r\n      setPositive(res.data[0].positive)\r\n      setNegative(res.data[0].negative)\r\n      setDeath(res.data[0].death)\r\n      setTodaytest(res.data[0].totalTestResultsIncrease)\r\n      setTodaypositive(res.data[0].positiveIncrease)\r\n      setTodaydeath(res.data[0].deathIncrease)\r\n      setTodayhospitalize(res.data[0].hospitalizedIncrease)\r\n      setRecovered(res.data[0].recovered)\r\n      setTodayupdate(res.data[0].lastModified)\r\n    })\r\n    .catch(err =>console.log(err));\r\n  }\r\n\r\n  const [current, setCurrent] = useState([])\r\n\r\n  const fetchStateCurrent = () => {\r\n    axios.get(\"https://api.covidtracking.com/v1/states/current.json\")\r\n    .then(res => {\r\n      console.log(res.data)\r\n      setCurrent(res.data)\r\n    })\r\n    .catch(err =>console.log(err));\r\n  }\r\n\r\n\r\n  // fetch data all time\r\n  useEffect(()=>{\r\n    fetchAllState();\r\n    fetchStateCurrent();\r\n  },[])\r\n\r\n\r\n  // navigate to selected State info url\r\n  const mapHandler = (e) => {\r\n      navigate(\"/stateinfo/\"+e.target.dataset.name)\r\n  };\r\n\r\n\r\n  // nagigate to selected State by option Selection\r\n  const selectSt = (e) => {\r\n    navigate(\"/stateinfo/\"+e)\r\n  }\r\n\r\n\r\n  // optional customization of filling per state and calling custom callbacks per state\r\n  const statesCustomConfig = () => {\r\n    var obj = {}\r\n    //set change by number of positive\r\n    const changeColor = (number) =>{\r\n      var color;\r\n      if (number < 15000){\r\n        color = \"#ffe9f4\"\r\n      }\r\n      else if( number >= 15000 && number < 40000){\r\n        color = \"#e6dbdc\"\r\n      }\r\n      else if( number >= 40000 && number < 80000){\r\n        color = \"#ffced9\"\r\n      }\r\n      else if( number >= 80000 && number < 150000){\r\n        color = \"#ffc0cb\"\r\n      }\r\n      else if( number >= 150000 && number < 230000){\r\n        color = \"#f1b3be\"\r\n      }\r\n      else if( number >= 150000 && number < 350000){\r\n        color = \"#e3a5b0\"\r\n      }\r\n      else{\r\n        color = \"#d598a3\"\r\n      }\r\n      return color\r\n    }\r\n    \r\n    // get every states' info and add in obj\r\n    for(var i = 0; i < current.length; i++){\r\n      obj[current[i].state] = {fill:changeColor(current[i].positive)}\r\n    }\r\n    //change map color depends on each positive of state\r\n    return obj\r\n  };\r\n\r\n\r\n  //weekly line table\r\n  const weeklyChart ={\r\n    chartData:{\r\n      labels:[\r\n        usHistory[6] ? usHistory[6].date : false,\r\n        usHistory[5] ? usHistory[5].date : false,\r\n        usHistory[4] ? usHistory[4].date : false,\r\n        usHistory[3] ? usHistory[3].date : false,\r\n        usHistory[2] ? usHistory[2].date : false,\r\n        usHistory[1] ? usHistory[1].date : false,\r\n        usHistory[0] ? usHistory[0].date : false,\r\n      ],\r\n      datasets:[\r\n        {\r\n          label: \"Positive\",\r\n          fill: false,\r\n          borderColor:\"red\",\r\n          data:[\r\n            usHistory[6] ? usHistory[6].positiveIncrease : false,\r\n            usHistory[5] ? usHistory[5].positiveIncrease : false,\r\n            usHistory[4] ? usHistory[4].positiveIncrease : false,\r\n            usHistory[3] ? usHistory[3].positiveIncrease : false,\r\n            usHistory[2] ? usHistory[2].positiveIncrease : false,\r\n            usHistory[1] ? usHistory[1].positiveIncrease : false,\r\n            usHistory[0] ? usHistory[0].positiveIncrease : false,\r\n          ]\r\n\r\n          // can change color by add background color\r\n          // backgroundColor:[\r\n          //   'red',\r\n          //   'orange',\r\n          //   'yellow',\r\n          //   'green',\r\n          //   'blue',\r\n          //   'indigo',\r\n          //   'violet'\r\n          // ]\r\n        },\r\n        {\r\n          label: \"Death\",\r\n          fill: false,\r\n          borderColor:\"blue\",\r\n          hidden: true,\r\n          data:[\r\n            usHistory[6] ? usHistory[6].deathIncrease : false,\r\n            usHistory[5] ? usHistory[5].deathIncrease : false,\r\n            usHistory[4] ? usHistory[4].deathIncrease : false,\r\n            usHistory[3] ? usHistory[3].deathIncrease : false,\r\n            usHistory[2] ? usHistory[2].deathIncrease : false,\r\n            usHistory[1] ? usHistory[1].deathIncrease : false,\r\n            usHistory[0] ? usHistory[0].deathIncrease : false,\r\n          ]\r\n        },\r\n        {\r\n          label: \"Hospitalized\",\r\n          fill: false,\r\n          borderColor:\"skyblue\",\r\n          hidden: true,\r\n          data:[\r\n            usHistory[6] ? usHistory[6].hospitalizedIncrease : false,\r\n            usHistory[5] ? usHistory[5].hospitalizedIncrease : false,\r\n            usHistory[4] ? usHistory[4].hospitalizedIncrease : false,\r\n            usHistory[3] ? usHistory[3].hospitalizedIncrease : false,\r\n            usHistory[2] ? usHistory[2].hospitalizedIncrease : false,\r\n            usHistory[1] ? usHistory[1].hospitalizedIncrease : false,\r\n            usHistory[0] ? usHistory[0].hospitalizedIncrease : false,\r\n          ]\r\n        },\r\n        {\r\n          label: \"Tested\",\r\n          fill: false,\r\n          borderColor:\"indigo\",\r\n          hidden: true,\r\n          data:[\r\n            usHistory[6] ? usHistory[6].totalTestResultsIncrease : false,\r\n            usHistory[5] ? usHistory[5].totalTestResultsIncrease : false,\r\n            usHistory[4] ? usHistory[4].totalTestResultsIncrease : false,\r\n            usHistory[3] ? usHistory[3].totalTestResultsIncrease : false,\r\n            usHistory[2] ? usHistory[2].totalTestResultsIncrease : false,\r\n            usHistory[1] ? usHistory[1].totalTestResultsIncrease : false,\r\n            usHistory[0] ? usHistory[0].totalTestResultsIncrease : false,\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  }\r\n\r\n  // Monthly chart\r\n  // get first day of each month\r\n  const getfirstdayofMonth = (array) => {\r\n    const date = [];\r\n    const positive = []\r\n    const death = []\r\n    const totalTestResults = []\r\n    var output = []\r\n    for(var i = array.length-1; i >= 0; i--){\r\n        if(array[i].date.toString().endsWith(\"01\") === true){\r\n            date.push(array[i].date)\r\n            positive.push(array[i].positive)\r\n            death.push(array[i].death)\r\n            totalTestResults.push(array[i].totalTestResults)\r\n        }\r\n    }\r\n    output = [date, positive, death, totalTestResults]\r\n    console.log(output)\r\n    return output\r\n  }\r\n  getfirstdayofMonth(usHistory)\r\n  const monthlyChart ={\r\n    chartData:{\r\n      labels:getfirstdayofMonth(usHistory)[0],\r\n      datasets:[\r\n        {\r\n          label: \"Positive\",\r\n          fill: false,\r\n          borderColor:\"red\",\r\n          data:getfirstdayofMonth(usHistory)[1]\r\n        },\r\n        {\r\n          label: \"Death\",\r\n          fill: false,\r\n          borderColor:\"blue\",\r\n          hidden: true,\r\n          data:getfirstdayofMonth(usHistory)[2]\r\n        },\r\n        {\r\n          label: \"Tested\",\r\n          fill: false,\r\n          borderColor:\"indigo\",\r\n          hidden: true,\r\n          data:getfirstdayofMonth(usHistory)[3]\r\n        }\r\n      ]\r\n    }\r\n  }\r\n\r\n  // positive percentage pie table\r\n  const negposChart ={\r\n    chartData:{\r\n      labels: [\r\n        'Positive',\r\n        'Negative'\r\n      ],\r\n      datasets:[\r\n        {\r\n          fill: false,\r\n          // borderColor:\"red\",\r\n          data:[\r\n            usHistory[0] ? usHistory[0].positive : false ,\r\n            usHistory[0] ? usHistory[0].negative : false,\r\n          ],\r\n          backgroundColor:[\r\n            'lightskyblue',\r\n            'tomato',\r\n          ]\r\n        },  \r\n      ]\r\n    }\r\n  }\r\n\r\n  //death ratio chart\r\n  const deathChart ={\r\n    chartData:{\r\n      labels: [\r\n        'Death',\r\n        'Positive'\r\n      ],\r\n      datasets:[\r\n        {\r\n          fill: false,\r\n          // borderColor:\"red\",\r\n          data:[\r\n            usHistory[0] ? usHistory[0].positive : false ,\r\n            usHistory[0] ? usHistory[0].negative : false,\r\n          ],\r\n          backgroundColor:[\r\n            'gold',\r\n            'indigo',\r\n          ]\r\n        },  \r\n      ]\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>COVID-19 Tracker</h1>\r\n\r\n      {/* left col */}\r\n      <div className=\"col col-md-6\">\r\n        {/* today's updated data */}\r\n        <div className=\"content_numeric\">\r\n          <h2>US Patient Status</h2>\r\n          <p style={{fontSize:\"10px\",marginTop:\"-25px\"}}>(updated at {todayupdate})</p>\r\n          \r\n          <div className=\"datatable cumulative\">\r\n            <h2 className=\"title cumulative\">Cumulative</h2>\r\n            <div className=\"tested\">\r\n              <h3>Tested</h3>\r\n              <p>{test}</p>\r\n            </div>\r\n            <div className=\"positive\">\r\n              <h3>Positive</h3>\r\n              <p>{positive}</p>\r\n            </div>\r\n            <div className=\"recovered\">\r\n              <h3>Recovered</h3>\r\n              <p>{recovered}</p>\r\n            </div>\r\n            <div className=\"death\">\r\n              <h3>Death</h3>\r\n              <p>{death}</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"datatable today\">\r\n            <h2 className=\"title today\">Today</h2>\r\n            <div className=\"testtoday\">\r\n              <h3>Tested</h3>\r\n              <p>{todaytest}</p>\r\n            </div>\r\n            <div className=\"positivetoday\">\r\n              <h3>Positive</h3>\r\n              <p>{todaypositive}</p>\r\n            </div>\r\n            <div className=\"hospitalizetoday\">\r\n              <h3>Hospitalized</h3>\r\n              <p>{todayhospitalize}</p>\r\n            </div>\r\n            <div className=\"deathtoday\">\r\n              <h3>Death</h3>\r\n              <p>{todaydeath}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* weekly line table */}\r\n        <div className=\"content_table\">\r\n          <Line\r\n            data={weeklyChart.chartData}\r\n            height={150}\r\n            options={{\r\n              title:{\r\n                display:true,\r\n                text:\"COVID Trends for Last 7 days\",\r\n                fontSize: 25,\r\n              },\r\n              // legend location\r\n              legend:{\r\n                display:true,\r\n                position:\"right\",\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        {/* monthly line table */}\r\n        <div className=\"content_table\">\r\n          <Line\r\n            data={monthlyChart.chartData}\r\n            height={150}\r\n            options={{\r\n              title:{\r\n                display:true,\r\n                text:\"Monthly COVID Trends\",\r\n                fontSize: 25,\r\n              },\r\n              // legend location\r\n              legend:{\r\n                display:true,\r\n                position:\"right\",\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        {/* pos/neg ratio */}\r\n        <div className=\"doughnut\">\r\n        <Doughnut\r\n            data={negposChart.chartData}\r\n            height={250}\r\n            options={{\r\n              //prevent legends disapearing\r\n              legend: {\r\n                onClick: (e) => e.stopPropagation()\r\n              },\r\n              title:{\r\n                display:true,\r\n                text:\"Positive Negative Ratio\",\r\n                fontSize: 15\r\n              }\r\n            }}\r\n          />\r\n          <div className=\"percentage\">\r\n            <h4>{(positive / (positive+negative) * 100).toFixed(2)} %</h4>\r\n          </div>\r\n        </div>\r\n\r\n        {/* death ratio */}\r\n        <div className=\"doughnut\">\r\n        <Doughnut\r\n            data={deathChart.chartData}\r\n            height={250}\r\n            options={{\r\n              //prevent legends disapearing\r\n              legend: {\r\n                onClick: (e) => e.stopPropagation()\r\n              },\r\n              title:{\r\n                display:true,\r\n                text:\"Death Ratio\",\r\n                fontSize: 15\r\n              }\r\n            }}\r\n          />\r\n          <div className=\"percentage\">\r\n            <h4>{(death / (positive) * 100).toFixed(2)} %</h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* right col */}\r\n      <div className=\"col col-md-6\">\r\n        <h2>Select State</h2>\r\n        {/* state selection */}\r\n        <div>\r\n          <select id=\"selectstate\" name=\"selectstate\" onChange={e => selectSt(e.target.value)}>\r\n            <option type=\"select\" disabled selected>Select State</option>\r\n            {states.map(a=>\r\n            <option type=\"select\" value={a.abbreviation}>{a.name}</option>\r\n            )}\r\n          </select>\r\n        </div>  \r\n\r\n        <div className=\"usmap\">\r\n          <USAMap customize={statesCustomConfig()} onClick={mapHandler} width=\"500px\" defaultFill=\"lightpink\"/>\r\n          {/* color bar */}\r\n          <table class=\"table colorbar\" >\r\n            <thead>\r\n              <tr>\r\n                <th style={{backgroundColor:\"#ffe9f4\", height:\"10px\", width:\"70px\"}}></th>\r\n                <th style={{backgroundColor:\"#e6dbdc\", height:\"10px\", width:\"70px\"}}></th>\r\n                <th style={{backgroundColor:\"#ffced9\", height:\"10px\", width:\"70px\"}}></th>\r\n                <th style={{backgroundColor:\"#ffc0cb\", height:\"10px\", width:\"70px\"}}></th>\r\n                <th style={{backgroundColor:\"#f1b3be\", height:\"10px\", width:\"70px\"}}></th>\r\n                <th style={{backgroundColor:\"#e3a5b0\", height:\"10px\", width:\"70px\"}}></th>\r\n                <th style={{backgroundColor:\"#d598a3\", height:\"10px\", width:\"70px\"}}></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td><h5>15000</h5><p style={{marginTop:\"-25px\"}}>Less</p></td>\r\n                <td><h5>40000</h5><p style={{marginTop:\"-25px\"}}>Less</p></td>\r\n                <td><h5>80000</h5><p style={{marginTop:\"-25px\"}}>Less</p></td>\r\n                <td><h5>150000</h5><p style={{marginTop:\"-25px\"}}>Less</p></td>\r\n                <td><h5>230000</h5><p style={{marginTop:\"-25px\"}}>Less</p></td>\r\n                <td><h5>350000</h5><p style={{marginTop:\"-25px\"}}>Less</p></td>\r\n                <td><h5>350000</h5><p style={{marginTop:\"-25px\"}}>More</p></td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n\r\n        {/* allstate table data */}\r\n        <div style={{marginTop:\"-70px\"}}>\r\n          <h2>All States Info</h2>\r\n          <div style={{height:\"400px\", overflow:\"auto\", marginBottom:\"80px\"}}>\r\n            <table class=\"table\">\r\n              <thead>\r\n                <th style={{width:\"125px\"}}>State</th>\r\n                <th style={{width:\"125px\"}}>Tested</th>\r\n                <th style={{width:\"125px\"}}>Positive</th>\r\n                <th style={{width:\"125px\"}}>Death</th>\r\n              </thead>\r\n              {\r\n                current.map(s=>\r\n                  <tbody>\r\n                    <tr>\r\n                      {s.state ? <th>{s.state}</th> : false}\r\n                      {s.totalTestsPeopleViral ? <td>{s.totalTestsPeopleViral}</td> : <td><a href={\"/stateinfo/\"+ s.state}>Check StateInfo</a></td>}\r\n                      {s.positive ? <td>{s.positive}</td> : <td><a href={\"/stateinfo/\"+ s.state}>Check StateInfo</a></td>}\r\n                      {s.death ? <td>{s.death}</td> : <td><a href={\"/stateinfo/\"+ s.state}>Check StateInfo</a></td>}\r\n                    </tr>\r\n                  </tbody>\r\n                )\r\n              }\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <span> </span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;","import React, { useState, useEffect, Component } from 'react';\r\nimport { Link } from '@reach/router';\r\nimport axios from 'axios';\r\nimport allstate from '../data.json'\r\n// import 'bulma/css/bulma.min.css';\r\nimport './Stateinfo.css'\r\nimport { Doughnut, Bar , Line, Pie } from 'react-chartjs-2';\r\n\r\nconst Stateinfo = (props) => {\r\n    const [state, setState] = useState(\"\")\r\n    const [test, setTest] = useState(0)\r\n    const [positive, setPositive] = useState(0)\r\n    const [negative, setNegative] = useState(0)\r\n    const [death, setDeath] = useState(0)\r\n    const [todaydeath, setTodaydeath] = useState(0)\r\n    const [todaypositive, setTodaypositive] = useState(0)\r\n    const [recovered, setRecovered] = useState(0)\r\n    const [todaytest, setTodaytest] = useState(0)\r\n    const [todayhospitalize, setTodayhospitalize] = useState(0)\r\n    const [todayupdate, setTodayupdate] = useState(\"\")\r\n    const [usHistory, setUSHistory] = useState([]);\r\n\r\n\r\n    //get today's stateinfo and store in each const\r\n    const fetchStateInfo = () =>{\r\n        axios.get(\"https://api.covidtracking.com/v1/states/\" + props.abbreviation + \"/daily.json\")\r\n        .then(res => {\r\n            setUSHistory(res.data)\r\n            setState(res.data[0].state)\r\n            setTest(res.data[0].totalTestsPeopleViral)\r\n            setPositive(res.data[0].positive)\r\n            setNegative(res.data[0].negative)\r\n            setDeath(res.data[0].death)\r\n            setTodaydeath(res.data[0].deathIncrease)\r\n            setTodaypositive(res.data[0].todaypositive)\r\n            setTodaytest(res.data[0].totalTestResultsIncrease)\r\n            setTodayhospitalize(res.data[0].hospitalizedIncrease)\r\n            setRecovered(res.data[0].recovered)\r\n            setTodayupdate(res.data[0].lastUpdateEt)\r\n        })\r\n        .catch(err =>console.log(err));\r\n    }\r\n\r\n    const[testingCenter, setTestingCenter] = useState();\r\n\r\n    const fetchTestLocation = () =>{\r\n        const fullStateName = (st) => {\r\n            for(var i = 0; i < allstate.length; i++){\r\n                if(allstate[i].abbreviation == st){\r\n                    console.log(allstate[i].location)\r\n                    return allstate[i].location\r\n                }\r\n            }\r\n        }\r\n        axios.get(\"https://covid-19-testing.github.io/locations/\" + fullStateName(props.abbreviation) + \"/complete.json\")\r\n        .then(res => {\r\n            console.log(res.data)\r\n            setTestingCenter(res.data)\r\n        })\r\n        .catch(err =>console.log(err));\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchStateInfo();\r\n        fetchTestLocation();\r\n    },[])\r\n\r\n\r\n    //chart for last 7 days\r\n    const weeklyChart ={\r\n        chartData:{\r\n          labels:[\r\n            usHistory[6] ? usHistory[6].date : false,\r\n            usHistory[5] ? usHistory[5].date : false,\r\n            usHistory[4] ? usHistory[4].date : false,\r\n            usHistory[3] ? usHistory[3].date : false,\r\n            usHistory[2] ? usHistory[2].date : false,\r\n            usHistory[1] ? usHistory[1].date : false,\r\n            usHistory[0] ? usHistory[0].date : false,\r\n          ],\r\n          datasets:[\r\n            {\r\n              label: \"Positive\",\r\n              fill: false,\r\n              borderColor:\"red\",\r\n              data:[\r\n                usHistory[6] ? usHistory[6].positiveIncrease : false,\r\n                usHistory[5] ? usHistory[5].positiveIncrease : false,\r\n                usHistory[4] ? usHistory[4].positiveIncrease : false,\r\n                usHistory[3] ? usHistory[3].positiveIncrease : false,\r\n                usHistory[2] ? usHistory[2].positiveIncrease : false,\r\n                usHistory[1] ? usHistory[1].positiveIncrease : false,\r\n                usHistory[0] ? usHistory[0].positiveIncrease : false,\r\n              ]\r\n    \r\n              // can change color by add background color\r\n              // backgroundColor:[\r\n              //   'red',\r\n              //   'orange',\r\n              //   'yellow',\r\n              //   'green',\r\n              //   'blue',\r\n              //   'indigo',\r\n              //   'violet'\r\n              // ]\r\n            },\r\n            {\r\n              label: \"Death\",\r\n              fill: false,\r\n              borderColor:\"blue\",\r\n              hidden: true,\r\n              data:[\r\n                usHistory[6] ? usHistory[6].deathIncrease : false,\r\n                usHistory[5] ? usHistory[5].deathIncrease : false,\r\n                usHistory[4] ? usHistory[4].deathIncrease : false,\r\n                usHistory[3] ? usHistory[3].deathIncrease : false,\r\n                usHistory[2] ? usHistory[2].deathIncrease : false,\r\n                usHistory[1] ? usHistory[1].deathIncrease : false,\r\n                usHistory[0] ? usHistory[0].deathIncrease : false,\r\n              ]\r\n            },\r\n            {\r\n              label: \"Hospitalized\",\r\n              fill: false,\r\n              borderColor:\"skyblue\",\r\n              hidden: true,\r\n              data:[\r\n                usHistory[6] ? usHistory[6].hospitalizedIncrease : false,\r\n                usHistory[5] ? usHistory[5].hospitalizedIncrease : false,\r\n                usHistory[4] ? usHistory[4].hospitalizedIncrease : false,\r\n                usHistory[3] ? usHistory[3].hospitalizedIncrease : false,\r\n                usHistory[2] ? usHistory[2].hospitalizedIncrease : false,\r\n                usHistory[1] ? usHistory[1].hospitalizedIncrease : false,\r\n                usHistory[0] ? usHistory[0].hospitalizedIncrease : false,\r\n              ]\r\n            },\r\n            {\r\n              label: \"Tested\",\r\n              fill: false,\r\n              borderColor:\"indigo\",\r\n              hidden: true,\r\n              data:[\r\n                usHistory[6] ? usHistory[6].totalTestResultsIncrease : false,\r\n                usHistory[5] ? usHistory[5].totalTestResultsIncrease : false,\r\n                usHistory[4] ? usHistory[4].totalTestResultsIncrease : false,\r\n                usHistory[3] ? usHistory[3].totalTestResultsIncrease : false,\r\n                usHistory[2] ? usHistory[2].totalTestResultsIncrease : false,\r\n                usHistory[1] ? usHistory[1].totalTestResultsIncrease : false,\r\n                usHistory[0] ? usHistory[0].totalTestResultsIncrease : false,\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n    }\r\n\r\n\r\n    // Monthly chart\r\n    // get first day of each month\r\n    const getfirstdayofMonth = (array) => {\r\n        const date = [];\r\n        const positive = []\r\n        const death = []\r\n        const totalTestResults = []\r\n        var output = []\r\n        for(var i = array.length-1; i >= 0; i--){\r\n            if(array[i].date.toString().endsWith(\"01\") === true){\r\n                date.push(array[i].date)\r\n                positive.push(array[i].positive)\r\n                death.push(array[i].death)\r\n                totalTestResults.push(array[i].totalTestResults)\r\n            }\r\n        }\r\n        output = [date, positive, death, totalTestResults]\r\n        console.log(output)\r\n        return output\r\n    }\r\n    getfirstdayofMonth(usHistory)\r\n    const monthlyChart ={\r\n        chartData:{\r\n            labels:getfirstdayofMonth(usHistory)[0],\r\n            datasets:[\r\n                {\r\n                    label: \"Positive\",\r\n                    fill: false,\r\n                    borderColor:\"red\",\r\n                    data:getfirstdayofMonth(usHistory)[1]\r\n\r\n                    // can change color by add background color\r\n                    // backgroundColor:[\r\n                    //   'red',\r\n                    //   'orange',\r\n                    //   'yellow',\r\n                    //   'green',\r\n                    //   'blue',\r\n                    //   'indigo',\r\n                    //   'violet'\r\n                    // ]\r\n                },\r\n                {\r\n                    label: \"Death\",\r\n                    fill: false,\r\n                    borderColor:\"blue\",\r\n                    hidden: true,\r\n                    data:getfirstdayofMonth(usHistory)[2]\r\n                },\r\n                {\r\n                    label: \"Tested\",\r\n                    fill: false,\r\n                    borderColor:\"indigo\",\r\n                    hidden: true,\r\n                    data:getfirstdayofMonth(usHistory)[3]\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    // positive percentage pie table\r\n    const negposChart ={\r\n        chartData:{\r\n        labels: [\r\n            'Positive',\r\n            'Negative'\r\n        ],\r\n        datasets:[\r\n            {\r\n            fill: false,\r\n            // borderColor:\"red\",\r\n            data:[\r\n                usHistory[0] ? usHistory[0].positive : false ,\r\n                usHistory[0] ? usHistory[0].negative : false,\r\n            ],\r\n            backgroundColor:[\r\n                'lightskyblue',\r\n                'tomato',\r\n            ]\r\n            },  \r\n        ]\r\n        }\r\n    }\r\n\r\n    //death ratio chart\r\n    const deathChart ={\r\n        chartData:{\r\n        labels: [\r\n            'Death',\r\n            'Positive'\r\n        ],\r\n        datasets:[\r\n            {\r\n            fill: false,\r\n            // borderColor:\"red\",\r\n            data:[\r\n                usHistory[0] ? usHistory[0].positive : false ,\r\n                usHistory[0] ? usHistory[0].negative : false,\r\n            ],\r\n            backgroundColor:[\r\n                'gold',\r\n                'indigo',\r\n            ]\r\n            },  \r\n        ]\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1>COVID-19 in {state}</h1>\r\n            {/* numeric data */}\r\n            <div className=\"col col-md-6\">\r\n                {/* today's updated data */}\r\n                <div className=\"content_numeric\">\r\n                <h2>{state} Patient Status</h2>\r\n                <p style={{fontSize:\"10px\",marginTop:\"-25px\"}}>(updated at {todayupdate})</p>\r\n                \r\n                <div className=\"datatable cumulative\">\r\n                    <h2 className=\"title cumulative\">Cumulative</h2>\r\n                    <div className=\"tested\">\r\n                        <h3>Tested</h3>\r\n                        {test ? <p>{test}</p> : <p>{positive+negative}</p>}\r\n                    </div>\r\n                    <div className=\"positive\">\r\n                        <h3>Positive</h3>\r\n                        {positive ? <p>{positive}</p> : <p>0</p>}\r\n                    </div>\r\n                    <div className=\"recovered\">\r\n                        <h3>Recovered</h3>\r\n                        {recovered ? <p>{recovered}</p> : <p>0</p>}\r\n                    </div>\r\n                    <div className=\"death\">\r\n                        <h3>Death</h3>\r\n                        {death ? <p>{death}</p> : <p>0</p>}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"datatable today\">\r\n                    <h2 className=\"title today\">Today</h2>\r\n                    <div className=\"testtoday\">\r\n                        <h3>Tested</h3>\r\n                        {todaytest ? <p>{todaytest}</p> : <p>0</p>}\r\n                    </div>\r\n                    <div className=\"positivetoday\">\r\n                        <h3>Positive</h3>\r\n                        {todaypositive ? <p>{todaypositive}</p> : <p>0</p>}\r\n                    </div>\r\n                    <div className=\"hospitalizetoday\">\r\n                        <h3>Hospitalized</h3>\r\n                        {todayhospitalize ? <p>{todayhospitalize}</p> : <p>0</p>}\r\n                    </div>\r\n                    <div className=\"deathtoday\">\r\n                        <h3>Death</h3>\r\n                        {todaydeath ? <p>{todaydeath}</p> : <p>0</p>}\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* visual data */}\r\n            <div className=\"col col-md-6\">\r\n                <h2>Positive & death Ratio</h2>\r\n                {/* pos/neg ratio */}\r\n                <div className=\"doughnut\">\r\n                <Doughnut\r\n                    data={negposChart.chartData}\r\n                    height={250}\r\n                    options={{\r\n                    //prevent legends disapearing\r\n                    legend: {\r\n                        onClick: (e) => e.stopPropagation()\r\n                    },\r\n                    title:{\r\n                        display:true,\r\n                        text:\"Positive Negative Ratio\",\r\n                        fontSize: 15\r\n                    }\r\n                    }}\r\n                />\r\n                <div className=\"percentage\">\r\n                    <h4>{(positive / (positive+negative) * 100).toFixed(2)} %</h4>\r\n                </div>\r\n                </div>\r\n\r\n                {/* death ratio */}\r\n                <div className=\"doughnut\">\r\n                <Doughnut\r\n                    data={deathChart.chartData}\r\n                    height={250}\r\n                    options={{\r\n                    //prevent legends disapearing\r\n                    legend: {\r\n                        onClick: (e) => e.stopPropagation()\r\n                    },\r\n                    title:{\r\n                        display:true,\r\n                        text:\"Death Ratio\",\r\n                        fontSize: 15\r\n                    }\r\n                    }}\r\n                />\r\n                <div className=\"percentage\">\r\n                    <h4>{(death / (positive) * 100).toFixed(2)} %</h4>\r\n                </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* weekly line table */}\r\n            <div className=\"content_table\" style={{padding:\"0px 140px\"}}>\r\n            <Line\r\n                data={weeklyChart.chartData}\r\n                height={120}\r\n                options={{\r\n                title:{\r\n                    display:true,\r\n                    text:\"COVID Trends for Last 7 days\",\r\n                    fontSize: 25,\r\n                }\r\n                }}\r\n            />\r\n            </div>\r\n\r\n            {/* monthly line table */}\r\n            <div className=\"content_table\" style={{padding:\"0px 140px\"}}>\r\n            <Line\r\n                data={monthlyChart.chartData}\r\n                height={120}\r\n                options={{\r\n                title:{\r\n                    display:true,\r\n                    text:\"Monthly COVID Trends\",\r\n                    fontSize: 25,\r\n                }\r\n                }}\r\n            />\r\n            </div>\r\n\r\n            {/* state testing center location */}\r\n            <div className=\"testinglocation\">\r\n                {testingCenter ? <h1>Testing Center in {state}</h1>: false}\r\n                {\r\n                    testingCenter ?\r\n                        testingCenter.map(a=>\r\n                            <ol className=\"location\">\r\n                                <h3>{a.name}</h3>\r\n                                {a.physical_address[0] ? <p><span style={{fontWeight:\"bolder\"}}>Address:</span> {a.physical_address[0].address_1}, {a.physical_address[0].city} {a.physical_address[0].state_province} {a.physical_address[0].postal_code}</p> : false}\r\n                                {a.phones[0] ? <p><span style={{fontWeight:\"bolder\"}}>Phone:</span> {a.phones[0].number}</p> : false}\r\n                                {a.regular_schedule[0] ? <p><span style={{fontWeight:\"bolder\"}}>Open Hour:</span> {a.regular_schedule[0].opens_at} to {a.regular_schedule[0].closes_at}</p> : false}\r\n                            </ol>\r\n                        ) :\r\n                        false\r\n                \r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Stateinfo;\r\n","import React, { Component, useState} from 'react';\nimport { Router, Link } from '@reach/router';\nimport './App.css'; /* optional for styling like the :hover pseudo-class */\nimport Main from './components/Main';\nimport Stateinfo from './components/Stateinfo'\n\nconst App = props => {\n  const [abbreviation, setAbbreviation] = useState(\"\")\n \n  return (\n    <div className=\"App\">\n    <Router>\n      <Main path=\"/\"/>\n      <Stateinfo path=\"/stateinfo/:abbreviation\" param={{value: abbreviation}} />\n    </Router>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}